# local nginx setup
# if you like use nginx vars and not shell vars you need to setup $${ngnix_var}ngnix_var form
# then the substitution by envsubsts not replace the nginx vars

# the upstream component nginx needs to connect to
upstream django {
    ip_hash;
    server ${NGINX_DJANGO_SERVER}:${NGINX_DJANGO_PORT};
}

# configuration of the server
server {

    listen      80;
    server_name ${NGINX_DOMAIN};
    charset     utf-8;
    server_tokens off;

    # max upload size
    client_max_body_size 75M;  
    proxy_ignore_client_abort on;

    location /static {
        alias /usr/share/nginx/static; # your Django project's static files - amend as required
    }

    location /favicon.ico {
        alias /usr/share/nginx/static/rest_framework/docs/img/favicon.ico;
    }
    
    # Finally, send all non-media requests to the Django server.
    location / {

    add_header 'Access-Control-Allow-Origin' '*' always;

    if ($${request_method}request_method ~ '(POST|GET|PUT|DELETE)') {
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;                                                                              
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE' always;                                                                
            add_header 'Access-Control-Allow-Headers' 'Accept,Authorization,Cache-Control,Content-Type,DNT,If-Modified-Since,Keep-Alive,Origin,User-Agent,X-Requested-With,x-api-key' always;
            
            # required to be able to read Authorization header in frontend                                                                            
            #add_header 'Access-Control-Expose-Headers' 'Authorization' always;  
    }

    if ($${request_method}request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE';                                                   
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization,x-api-key';
            add_header 'Access-Control-Max-Age' 1728000;                                                                                   
            add_header 'Content-Type' 'text/plain charset=UTF-8';                                                                          
            add_header 'Content-Length' 0;                                                                                                 
            return 204; 
    }
        proxy_set_header Host $${http_host}http_host;
        proxy_redirect off;
        if (!-f $${request_filename}request_filename) {
            proxy_pass http://django;
            break;
        }
    }

    # Gzip Settings
    gzip on;
    gzip_disable "msie6";
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_buffers 32 16k;
    gzip_http_version 1.1;
    gzip_min_length 250;
    gzip_types image/jpeg image/bmp image/svg+xml text/plain text/css application/json application/javascript application/x-javascript text/xml application/xml application/xml+rss text/javascript image/x-icon;
}
